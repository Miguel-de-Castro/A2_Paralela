#!/bin/bash
################->  are comments
################-> "#SBATCH" (only one "#") are Batch Script commands

################ Verbose mode

#SBATCH --export=ALL

################

################ Change these parameters according to your requisites
# nodes and tasks
#SBATCH --ntasks 32
#SBATCH --nodes 2
#SBATCH --ntasks-per-node=16

# time 
#SBATCH -t 10
# time formats =  "minutes", "minutes:seconds", "hours:minutes:seconds", "days-hours", "days-hours:minutes" and "days-hours:minutes:seconds"

# Exclusive (alloc all threads from each node) or shared (alloc only threads set by "-n" parameter)
#SBATCH --exclusive
##SBATCH --shared

################ Please, change this e-mail address to yours

#SBATCH --mail-type=ALL
#SBATCH --mail-user=example@edu.pucrs.br

################

#SBATCH --no-requeue

################ Output options

# %%     The character "%".
# %A     Job array's master job allocation number.
# %a     Job array ID (index) number.
# %J     jobid.stepid of the running job. (e.g. "128.0")
# %j     jobid of the running job.
# %N     short hostname. This will create a separate IO file per node.
# %n     Node identifier relative to current job (e.g. "0" is the first node of the running job) This will create  a  separate IO file per node.
# %s     stepid of the running job.
# %t     task identifier (rank) relative to current job. This will create a separate IO file per task.
# %u     User name.
# %x     Job name.

## all output in same file
#SBATCH -o %x.%j.out

################
echo Running on host `hostname`
echo
echo Initial Time is `date`
echo
echo Directory is `pwd`
echo
echo This jobs runs on the following nodes:
echo $SLURM_JOB_NODELIST
echo
echo JOB_ID:
echo $SLURM_JOBID
mkdir files_job_$SLURM_JOBID
echo Criado dir files_job_$SLURM_JOBID
program=$1
size=$2
echo Running $program size $size
# mpicc $program.c -o $program-$size -DSIZE=$size 
mpicc $program.c -o $program-$size -DSIZE=$size -fopenmp
echo ################

############# Commands...

# #SBATCH --nodes 1

# echo "1 node - 2 processos (bynode)"
# mpirun --map-by node -np 2 ./$program-$size
# echo

echo "2 node - 3 processos (bynode)"
mpirun --map-by node -np 3 ./$program-$size
echo

# #SBATCH --nodes 3

# echo "3 node - 4 processos (bynode)"
# mpirun --map-by node -np 4 ./$program-$size
# echo

# #SBATCH --nodes 4

# echo "4 node - 5 processos (bynode)"
# mpirun --map-by node -np 5 ./$program-$size
# echo

################

echo Final Time is `date`
